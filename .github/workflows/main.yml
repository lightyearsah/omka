 

name: UI Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Install system dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y --no-install-recommends \
          python3 python3-pip python3-setuptools python3-wheel python3-tk python3-dev build-essential \
          wget unzip tar xz-utils xvfb xauth x11-apps libx11-6 libxext6 libsm6 libxrender1 \
          libgl1 libglx-mesa0 libglib2.0-0 fonts-liberation ca-certificates libnss3 libnspr4 \
          libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgbm1 libxrandr2 \
          libxdamage1 libxcomposite1 libxfixes3 libasound2t64 libdbus-1-3 libgdk-pixbuf2.0-0 x11vnc xvfb xauth \
          libcairo2 libpango-1.0-0 curl xvfb xauth python3-tk python3-dev x11-apps libx11-6 libxext6 libsm6 libxrender1 && \
        sudo rm -rf /var/lib/apt/lists/*

    - name: Install Python packages
      run: |
        python3 -m pip install --upgrade pip
        pip3 install --no-cache-dir selenium undetected-chromedriver gym pyautogui pyperclip

    - name: Install Chromium
      run: |
        sudo mkdir -p /app/chromium
        wget -O chromium.tar.xz "https://github.com/ungoogled-software/ungoogled-chromium-portablelinux/releases/download/130.0.6723.91-1/ungoogled-chromium_130.0.6723.91-1_linux.tar.xz"
        sudo tar -xf chromium.tar.xz -C /app/chromium
        rm chromium.tar.xz

    - name: Install proxi
      run: |
        curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc \
          | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null \
          && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" \
          | sudo tee /etc/apt/sources.list.d/ngrok.list \
          && sudo apt update \
          && sudo apt install ngrok
    
    - name: Start virtual display (Xvfb)
      run: |

          # Start Xvfb on display :99 with required screen size and depth, run in background with sudo
          sudo Xvfb :99 -screen 0 1920x1080x16 &
          
          # Export DISPLAY and XAUTHORITY for the current shell (no sudo here, as these are environment variables)
          export DISPLAY=:99
          export XAUTHORITY=/root/.Xauthority
          
          # Wait for Xvfb to initialize
          sleep 5
          
          # Ensure the .Xauthority file exists and generate trusted cookie with sudo (needed because /root/.Xauthority is root-owned)
          sudo touch /root/.Xauthority
          sudo xauth generate :99 . trusted
          
          # Start x11vnc server on display :99 with password protection, run in background
          sudo x11vnc -display :99 -passwd pw -forever -bg
    
    
    - name: Run your tests or script
      env:
        DISPLAY: :99
      run: |
        ngrok config add-authtoken 2zH1Z9iLo5xmAJ0mUGDyh7e7TGg_2vyegdEnRfpnDaEziDWQa
           
        # Start ngrok to proxy local VNC port 5999
        ngrok tcp 5999 &
        
        # Optional: wait a bit for ngrok to initialize
        sleep 600
        
        
